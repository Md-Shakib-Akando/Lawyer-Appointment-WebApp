[
    {
        "id": 1,
        "question": "What is useState and how does it work in React?",
        "answer": "useState is a React Hook that allows you to add state to functional components. It returns an array with two elements: the current state value and a function to update it. When the state is updated, the component re-renders.",
        "date": "2023-11-22"
    },
    {
        "id": 2,
        "question": "What is the purpose of useEffect in React?",
        "answer": "useEffect is a Hook used to handle side effects in React components, such as data fetching, subscriptions, or manually changing the DOM. It runs after the render and can optionally return a cleanup function.",
        "date": "2025-04-22"
    },
    {
        "id": 3,
        "question": "What is a custom hook in React and when should you use one?",
        "answer": "A custom hook is a reusable JavaScript function that starts with 'use' and lets you extract component logic into reusable pieces. Use one when you have logic shared across multiple components.",
        "date": "2024-02-11"
    },
    {
        "id": 4,
        "question": "Difference between controlled and uncontrolled components. Which one is better?",
        "answer": "Controlled components are React components whose form data is handled by the component's state. Uncontrolled components store their own state internally and use refs to access DOM values. Controlled components offer better control and validation, so they are usually preferred.",
        "date": "2021-09-30"
    },
    {
        "id": 5,
        "question": "Tell us something about useFormStatus() in React.",
        "answer": "useFormStatus() is a Hook from Reactâ€™s experimental API (like in React Server Components or Remix). It provides information about the current status of a form, such as whether it's submitting. It's useful for showing loading indicators or disabling inputs during form submission.",
        "date": "2023-11-02"
    }
]